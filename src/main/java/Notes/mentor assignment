 1> Given a monolithic rest server which has a number of algorithms running at the backend can be scaled horizontally and uses two databases RODB and Redis to make response decisions. RODB is a read only in memory database that scales horizontally along with the server. Redis server resides on a separate server and runs in a cluster mode managed via Sentinels. We want to move the monolithic server to aws and break it down into micro service by segregating the types of algorithms that can run as one micro service on a given ECS cluster. Also we would be moving RODB and Redis databases to elasticache which runs on EC2 instances behind the scenes.



 altogether move into new stack -
    testing required all microservices which is deployed on ECS (assume fargate or ECS cluster already build)
            - unit testing
            - contract testing
            - performance 
            - security
            - load 
            - Functional testing
            - monitoring & health check
            - logging
            - throttling 
            - Automation to verify functional requirement
            - 

    RODB / Redis  -> ElasticCache  

        So now the questions that might have arisen in my mind are:

            -How will I migrate all my data from a structured data source (MySQL) to a non-structured data source (Elastic Search)?

            -Can this migration be done without any downtime?

            - How will I keep both data sources in sync?

            - impact area or services

            




rodb
Rodb is a zero fragmentation micro database read-only access library. The primary goal of rodb is to provide access to compiled config files in memory restricted applications, like games. A very common problem in games is finding an efficient and convenient way to store and access large number of different config files, like level description, gameplay settings, effect configurations and many others.

Rodb uses YAML as a source format. YAML files are converted to a binary blob optimized for fairly efficient in-memory access. The blob is later loaded into a single contiguous block of memory with only one read operation.

Rodb supports a limited subset of YAML types: UTF-8 strings, 32-bit integers, single precision floats and booleans. Values of any of these types can be put into arrays and maps (only string keys are allowed in maps). There's no restriction on nesting of these data structures.

Since arrays can contain values of any types and lengths, they are implemented with an additional table of offsets to elements. The access to elements is O(1). Maps store their keys in a sorted array of strings, which allows for O(logN) access.

Please note that rodb is not designed to provide access to gigabytes of data or to churn millions of transaction per second. Its focus is simplicity and minimal memory fragmentation. Some performance is sacrificed to achieve these goals.


2>
Amazon music is launching a new feature (DJ mode) for listening to music that can be enabled via Alexa by calling "Alexa play DJ mode". The DJ mode makes a decision to include or exclude a song based on users' song search and listen history. Please write a testing strategy for the said feature.


Run validation test 
Perform Functional test
Run a Beta test
Policy guidelined
Security requirement
Acount linking 
UX testing of DJ mode 
Music validation 

history
feature testing -
profile , joner 






















